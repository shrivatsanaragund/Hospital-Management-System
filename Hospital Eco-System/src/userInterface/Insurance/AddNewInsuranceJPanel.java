/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package userInterface.Insurance;

import business.EcoSystem;
import business.enterprisepkg.Enterprise;
import business.personpkg.Insurance;
import business.userAccountpkg.UserAccount;
import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author shrivatsanaragund
 */
public class AddNewInsuranceJPanel extends javax.swing.JPanel {

    /**
     * Creates new form AddNewInsuranceJPanel
     */
    private JPanel userProcessContainer;
    private UserAccount userAccount;
    private EcoSystem ecoSystem;
    private Enterprise enterprise;

    public AddNewInsuranceJPanel(JPanel userProcessContainer, UserAccount userAccount, Enterprise enterprise, EcoSystem ecoSystem) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = userAccount;
        this.ecoSystem = ecoSystem;
        this.enterprise = enterprise;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnBasic = new javax.swing.JButton();
        btnStandard = new javax.swing.JButton();
        btnPremium = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblIns = new javax.swing.JTable();
        btnAdd = new javax.swing.JButton();
        txtPaln = new javax.swing.JTextField();
        txtCoverage = new javax.swing.JTextField();
        txtPremium = new javax.swing.JTextField();
        txtBenefits = new javax.swing.JTextField();
        btnBack = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        comboType = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();

        btnBasic.setText("Basic");
        btnBasic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBasicActionPerformed(evt);
            }
        });

        btnStandard.setText("Standard");
        btnStandard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStandardActionPerformed(evt);
            }
        });

        btnPremium.setText("Premium");
        btnPremium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPremiumActionPerformed(evt);
            }
        });

        tblIns.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Plan", "Coverage", "Premium", "Benefits"
            }
        ));
        jScrollPane1.setViewportView(tblIns);

        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnBack.setText("<Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        jLabel1.setText("Plan");

        jLabel2.setText("Coverage");

        jLabel3.setText("Premium");

        jLabel4.setText("Benefits");

        comboType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Basic", "Standard", "Premium" }));

        jLabel5.setText("Type");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(112, 112, 112)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 788, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addComponent(btnBasic)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnStandard)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnPremium))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(94, 94, 94)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4))
                                .addGap(38, 38, 38)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(comboType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(txtPremium, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtBenefits, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtCoverage, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtPaln, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(btnAdd))))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(btnBack)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(90, 90, 90)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBasic)
                    .addComponent(btnStandard)
                    .addComponent(btnPremium))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(62, 62, 62)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5)
                    .addComponent(comboType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(txtPaln, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCoverage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPremium, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtBenefits, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnAdd)
                .addGap(23, 23, 23)
                .addComponent(btnBack)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBasicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBasicActionPerformed

        DefaultTableModel model = (DefaultTableModel) tblIns.getModel();
        model.setRowCount(0);
        ArrayList<Insurance> insurance = ecoSystem.getPersonDirectory().getBasicInsuranceList();
        for (Insurance i : insurance) {
            Object row[] = new Object[4];
            row[0] = i.getPlan();
            row[1] = i.getCoverage();
            row[2] = i.getPremium();
            row[3] = i.getBenefits();
            model.addRow(row);
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_btnBasicActionPerformed

    private void btnStandardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStandardActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) tblIns.getModel();
        model.setRowCount(0);
        ArrayList<Insurance> insurance = ecoSystem.getPersonDirectory().getStandardInsuranceList();
        for (Insurance i : insurance) {
            Object row[] = new Object[4];
            row[0] = i.getPlan();
            row[1] = i.getCoverage();
            row[2] = i.getPremium();
            row[3] = i.getBenefits();
            model.addRow(row);
        }
    }//GEN-LAST:event_btnStandardActionPerformed

    private void btnPremiumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPremiumActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) tblIns.getModel();
        model.setRowCount(0);
        ArrayList<Insurance> insurance = ecoSystem.getPersonDirectory().getPremiumInsuranceList();
        for (Insurance i : insurance) {
            Object row[] = new Object[4];
            row[0] = i.getPlan();
            row[1] = i.getCoverage();
            row[2] = i.getPremium();
            row[3] = i.getBenefits();
            model.addRow(row);
        }
    }//GEN-LAST:event_btnPremiumActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        String type = comboType.getSelectedItem().toString();
        String plan = txtPaln.getText();
        String coverage = txtCoverage.getText();
        String premium = txtPremium.getText();
        String benefits = txtBenefits.getText();

        if (type.equals("Basic")) {
            ecoSystem.getPersonDirectory().newBInsurance(plan, coverage, premium, benefits);
            JOptionPane.showMessageDialog(null, "Basic Insurance Added successfully");
        }
        else if (type.equals("Standard")) {
            ecoSystem.getPersonDirectory().newSInsurance(plan, coverage, premium, benefits);
            JOptionPane.showMessageDialog(null, "Standard Insurance Added successfully");
        }
        else if (type.equals("Premium")) {
            ecoSystem.getPersonDirectory().newPInsurance(plan, coverage, premium, benefits);
            JOptionPane.showMessageDialog(null, "Premium Insurance Added successfully");
        }

//        String insuranceType = "";
//        if (btnBasic.isSelected()) {
//            insuranceType = "Basic";
//        } else if (btnStandard.isSelected()) {
//            insuranceType = "Standard";
//        } else if (btnPremium.isSelected()) {
//            insuranceType = "Premium";
//        }
//
//        if (plan.isEmpty() || coverage.isEmpty() || premium.isEmpty() || benefits.isEmpty()) {
//            JOptionPane.showMessageDialog(this, "Please fill in all fields", "Error", JOptionPane.ERROR_MESSAGE);
//            return;
//        }
//        if (insuranceType.equals("Basic")) {
//            ecoSystem.getPersonDirectory().newBInsurance(plan, coverage, premium, benefits);
//            JOptionPane.showMessageDialog(null, "Basic Insurance Added successfully");
//        } else if (insuranceType.equals("Standard")) {
//            ecoSystem.getPersonDirectory().newSInsurance(plan, coverage, premium, benefits);
//            JOptionPane.showMessageDialog(null, "Standard Insurance Added successfully");
//        } else if (insuranceType.equals("Premium")) {
//            ecoSystem.getPersonDirectory().newPInsurance(plan, coverage, premium, benefits);
//            JOptionPane.showMessageDialog(null, "Premium Insurance Added successfully");
//        }
    }//GEN-LAST:event_btnAddActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnBasic;
    private javax.swing.JButton btnPremium;
    private javax.swing.JButton btnStandard;
    private javax.swing.JComboBox<String> comboType;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblIns;
    private javax.swing.JTextField txtBenefits;
    private javax.swing.JTextField txtCoverage;
    private javax.swing.JTextField txtPaln;
    private javax.swing.JTextField txtPremium;
    // End of variables declaration//GEN-END:variables
}
