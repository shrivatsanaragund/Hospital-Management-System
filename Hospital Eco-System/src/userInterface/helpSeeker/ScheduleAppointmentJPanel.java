/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package userInterface.helpSeeker;

import business.EcoSystem;
import business.enterprisepkg.Enterprise;
import business.organizationpkg.DepartmentsOrganization;
import business.organizationpkg.DoctorOrganization;
import business.organizationpkg.Organization;
import business.organizationpkg.PatientOrganization;
import business.organizationpkg.PharmacyOrganization;
import business.personpkg.Person;
import business.personpkg.PersonDirectory;
import business.userAccountpkg.UserAccount;
import business.workQueuepkg.SendDataToDoctorWorkRequest;
import java.awt.CardLayout;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author sameersdeshpande
 */
public class ScheduleAppointmentJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ScheduleAppointmentJPanel
     */
    private JPanel userProcessContainer;
    private UserAccount userAccount;
    private EcoSystem ecoSystem;
    private Enterprise enterprise;
    private Organization organization;
    private PersonDirectory personDirectory;
    private DoctorOrganization doctorOrganization;

    public ScheduleAppointmentJPanel(JPanel userProcessContainer, UserAccount userAccount, EcoSystem ecoSystem, Enterprise enterprise) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = userAccount;
        this.ecoSystem = ecoSystem;
        this.enterprise = enterprise;

        display();
        populateCombo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        txtPName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtPAge = new javax.swing.JTextField();
        txtPGender = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtSymtoms = new javax.swing.JTextArea();
        cmbDoctors = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        cmbDay = new javax.swing.JComboBox<>();
        cmdTime = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtAll = new javax.swing.JTextArea();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea3 = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 204, 153));

        jLabel2.setText("Patient Name:");

        jLabel3.setText("Patient Age:");

        txtPAge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPAgeActionPerformed(evt);
            }
        });

        jLabel5.setText("Patient Gender:");

        jLabel1.setText("Symtoms:");

        txtSymtoms.setColumns(20);
        txtSymtoms.setRows(5);
        jScrollPane1.setViewportView(txtSymtoms);

        cmbDoctors.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbDoctorsActionPerformed(evt);
            }
        });

        jLabel4.setText("Select Doctor:");

        jLabel6.setText("Time Slot");

        jLabel7.setText("Select Day:");

        cmbDay.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday" }));
        cmbDay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbDayActionPerformed(evt);
            }
        });

        cmdTime.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "10 AM", "11 AM", "12 PM", "1:30 PM", "2:45 PM", "3:30 PM", "4:20 PM", "5:40 PM", "6:10 PM", "7:20 PM", " " }));
        cmdTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdTimeActionPerformed(evt);
            }
        });

        jLabel8.setText("Any Allergies:");

        txtAll.setColumns(20);
        txtAll.setRows(5);
        jScrollPane2.setViewportView(txtAll);

        jLabel9.setText("Any comments:");

        jTextArea3.setColumns(20);
        jTextArea3.setRows(5);
        jScrollPane3.setViewportView(jTextArea3);

        jButton1.setText("Book Appointment");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText(">>Back");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtPName, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPAge, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtPGender, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel1)
                                        .addComponent(jLabel4))
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel6))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cmdTime, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cmbDay, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(79, 79, 79)
                                        .addComponent(jLabel8)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(cmbDoctors, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 407, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton1)
                                .addGap(17, 17, 17)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtPName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(txtPAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(51, 51, 51)
                                .addComponent(jLabel1))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(39, 39, 39)
                                .addComponent(jLabel8))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(39, 39, 39)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmbDoctors, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmbDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(cmdTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(jLabel9))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton1))
                .addContainerGap(150, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtPAgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPAgeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPAgeActionPerformed

    private void cmbDoctorsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbDoctorsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbDoctorsActionPerformed

    private void cmbDayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbDayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbDayActionPerformed

    private void cmdTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdTimeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmdTimeActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:

        UserAccount docAccount = (UserAccount) cmbDoctors.getSelectedItem();
        String medicatnTxt = txtSymtoms.getText().replaceAll("\n", " ");
        String pname = txtPName.getText();
        String page = txtPAge.getText();
        String pgender = txtPGender.getText();
        String Allergy = txtAll.getText();
        String day = (String) cmbDay.getSelectedItem();
        String time = (String) cmdTime.getSelectedItem();
        SendDataToDoctorWorkRequest sendDataToDoctorWorkRequest = new SendDataToDoctorWorkRequest();
        sendDataToDoctorWorkRequest.setMessage("Appointments Requests");
        sendDataToDoctorWorkRequest.setSender(userAccount);
        sendDataToDoctorWorkRequest.setStatus("Sent");
        sendDataToDoctorWorkRequest.setMedication(medicatnTxt);
        sendDataToDoctorWorkRequest.setPatientName(pname);
        sendDataToDoctorWorkRequest.setPage(page);
        sendDataToDoctorWorkRequest.setPgender(pgender);
        sendDataToDoctorWorkRequest.setAllergies(Allergy);
        sendDataToDoctorWorkRequest.setDay(day);
        sendDataToDoctorWorkRequest.setTimeslot(time);

        sendDataToDoctorWorkRequest.setRequestDate(new Date());
        sendDataToDoctorWorkRequest.setReceiver(docAccount);

        docAccount.getWorkQueue().getWorkRequestList().add(sendDataToDoctorWorkRequest);
        userAccount.getWorkQueue().getWorkRequestList().add(sendDataToDoctorWorkRequest);
        JOptionPane.showMessageDialog(null, "Appointment Booked successfully", "success", JOptionPane.PLAIN_MESSAGE);
        txtSymtoms.setText("");


    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cmbDay;
    private javax.swing.JComboBox cmbDoctors;
    private javax.swing.JComboBox<String> cmdTime;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea jTextArea3;
    private javax.swing.JTextArea txtAll;
    private javax.swing.JTextField txtPAge;
    private javax.swing.JTextField txtPGender;
    private javax.swing.JTextField txtPName;
    private javax.swing.JTextArea txtSymtoms;
    // End of variables declaration//GEN-END:variables

    private void display() {

        Person person = userAccount.getPerson();

        txtPName.setText(person.getFirstName());
        txtPGender.setText(person.getGender());

        txtPAge.setText(String.valueOf(person.getAge()));

    }

    private void populateCombo() {
        cmbDoctors.removeAllItems();
        getOrganization("Doctor", enterprise);
        if (organization == null) {
            JOptionPane.showMessageDialog(null, "Doctor Organization does not exist for the enterprise! " + enterprise.getName(), "warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
//        ArrayList<Person> person = organization.getPersonDirectory().getPersonList();
//
//        for (Person p : person) {
//            cmbDoctors.addItem(p);  // Add the entire Patient object
//
//        }

        ArrayList<UserAccount> userAccountList = organization.getUserAccountDirectory().getUserAccountList();
        for (UserAccount u : userAccountList) {
            cmbDoctors.addItem(u);
        }
    }

    private void getOrganization(String orgVal, Enterprise e) {

        try {
            for (Organization organization : e.getOrganizationDirectory().getOrganizationList()) {
                System.out.println(organization);
                if (orgVal.equals("Doctor") && organization instanceof DoctorOrganization) {
                    this.organization = organization;
                    this.personDirectory = organization.getPersonDirectory();
                } else if (orgVal.equals("Patient Organization") && organization instanceof PatientOrganization) {
                    this.organization = organization;
                    this.personDirectory = organization.getPersonDirectory();
                }
            }
        } catch (Exception ex) {
            return;
        }

    }
}
